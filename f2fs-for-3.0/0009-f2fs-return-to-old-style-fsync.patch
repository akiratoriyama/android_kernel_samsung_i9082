From 6892c7610aba1002bcefd28fbc9b02c5ba1c5fce Mon Sep 17 00:00:00 2001
From: Alejandro Martinez Ruiz <alex@nowcomputing.com>
Date: Mon, 10 Jun 2013 12:37:13 +0200
Subject: [PATCH] f2fs: return to old style ->fsync()

Upstream commit 02c24a821 fs: push i_mutex and filemap_write_and_wait
down into ->fsync() handlers changed the implementation of fsync so that
it is now responsible for locking i_mutex and calling
filemap_write_and_wait_range().

Remove those from f2fs for pre-3.1 kernels.

Signed-off-by: Alejandro Martinez Ruiz <alex@nowcomputing.com>
---
 fs/f2fs/f2fs.h |  2 +-
 fs/f2fs/file.c | 10 +---------
 2 files changed, 2 insertions(+), 10 deletions(-)

diff --git a/fs/f2fs/f2fs.h b/fs/f2fs/f2fs.h
index 863a5e91..9651eab 100644
--- a/fs/f2fs/f2fs.h
+++ b/fs/f2fs/f2fs.h
@@ -902,7 +902,7 @@ static inline int f2fs_readonly(struct super_block *sb)
 /*
  * file.c
  */
-int f2fs_sync_file(struct file *, loff_t, loff_t, int);
+int f2fs_sync_file(struct file *, int);
 void truncate_data_blocks(struct dnode_of_data *);
 void f2fs_truncate(struct inode *);
 int f2fs_getattr(struct vfsmount *, struct dentry *, struct kstat *);
diff --git a/fs/f2fs/file.c b/fs/f2fs/file.c
index 7eab9dc..d2047b0 100644
--- a/fs/f2fs/file.c
+++ b/fs/f2fs/file.c
@@ -138,7 +138,7 @@ static int get_parent_ino(struct inode *inode, nid_t *pino)
 	return 1;
 }
 
-int f2fs_sync_file(struct file *file, loff_t start, loff_t end, int datasync)
+int f2fs_sync_file(struct file *file, int datasync)
 {
 	struct inode *inode = file->f_mapping->host;
 	struct f2fs_sb_info *sbi = F2FS_SB(inode->i_sb);
@@ -154,17 +154,10 @@ int f2fs_sync_file(struct file *file, loff_t start, loff_t end, int datasync)
 		return 0;
 
 	trace_f2fs_sync_file_enter(inode);
-	ret = filemap_write_and_wait_range(inode->i_mapping, start, end);
-	if (ret) {
-		trace_f2fs_sync_file_exit(inode, need_cp, datasync, ret);
-		return ret;
-	}
 
 	/* guarantee free sections for fsync */
 	f2fs_balance_fs(sbi);
 
-	mutex_lock(&inode->i_mutex);
-
 	if (datasync && !(inode->i_state & I_DIRTY_DATASYNC))
 		goto out;
 
@@ -204,7 +197,6 @@ int f2fs_sync_file(struct file *file, loff_t start, loff_t end, int datasync)
 		ret = blkdev_issue_flush(inode->i_sb->s_bdev, GFP_KERNEL, NULL);
 	}
 out:
-	mutex_unlock(&inode->i_mutex);
 	trace_f2fs_sync_file_exit(inode, need_cp, datasync, ret);
 	return ret;
 }
-- 
1.8.2.1.422.gdcd8c09

